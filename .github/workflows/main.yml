name: Build APK

on:
  push:
    branches:
      - main  # Trigger on push to the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use Ubuntu for the build environment

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Checkout the code

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # Use Temurin JDK
          java-version: '17'       # Use JDK 17

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          sdk-version: '30.0.3'  # Specify Android SDK version

      - name: Install Android dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y lib32stdc++6 lib32z1

      - name: Create `build.gradle` in the root directory if missing
        run: |
          echo "buildscript {
            repositories {
              google()
              mavenCentral()
            }
            dependencies {
              classpath 'com.android.tools.build:gradle:7.0.0'
            }
          }

          allprojects {
            repositories {
              google()
              mavenCentral()
            }
          }" > build.gradle

      - name: Create `settings.gradle` if missing
        run: |
          echo "rootProject.name = 'SolidaritySMSApp'" > settings.gradle

      - name: Create `app/build.gradle` if missing
        run: |
          echo "apply plugin: 'com.android.application'

          android {
            compileSdkVersion 30
            defaultConfig {
              applicationId \"com.example.solidaritysms\"
              minSdkVersion 16
              targetSdkVersion 30
              versionCode 1
              versionName \"1.0\"
            }

            buildTypes {
              release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
              }
            }
          }

          dependencies {
            implementation 'com.android.support:appcompat-v7:28.0.0'
          }" > app/build.gradle

      - name: Generate Gradle Wrapper
        run: gradle wrapper  # Ensure gradle wrapper is created

      - name: Grant execute permission for gradlew
        run: |
          chmod +x ./gradlew  # Make gradlew executable

      - name: Run Gradle clean and assembleDebug
        run: |
          ./gradlew clean assembleDebug  # Clean and build the APK using gradle

      - name: Check APK exists
        run: |
          ls -la app/build/outputs/apk/debug  # Check the location of the APK

      - name: Upload APK
        uses: actions/upload-artifact@v4  # Upload the APK as an artifact
        with:
          name: app-debug.apk
          path: app/build/outputs/apk/debug/app-debug.apk  # Path to the APK
